name: x86-64

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch: {}

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      # selecting a toolchain either by action or manual `rustup` calls should happen
      # before the plugin, as the cache uses the current rustc version as its cache key
      - run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
        with: {}
      - name: apt-get deps
        run: |
          set -uexo pipefail
          export DEBIAN_FRONTEND=noninteractive
          cat <<EOF | sudo tee /etc/apt/sources.list.d/phosh-nightly.sources
          Types: deb
          URIs: http://deb.phosh.mobi/nightly/
          Suites: trixie-nightly
          Components: main
          Signed-By:
            -----BEGIN PGP PUBLIC KEY BLOCK-----
            
            mQINBGXoHOYBEAC/893ifemxPCa3l+46Vtpjiew4Eu+c3kXEj6sEOQZS8+ZvJ93O
            So3cEe7tqPM8AjqPjO6GsBjqr86swk5bbZ70GIqo1H2p9JdBaiQWqTDXxXRDvel5
            0SaxbUQvLm880pjS/gcsBezRv8vb9dxDsPMzap6GuJnF5QqagfOX8B1aQKCywJNo
            QoFc3RL7c3j2hLRpI4kdfcjo2j3GtjKb+ojWja9dng/gsMlrHYEqS+aWg+eVFnLM
            XkwJXS/4AQjooH9qC+swtVNYYzt7wQdCm1mNFfrXDHSLse0ugyESqZ8AN5d9bUlB
            fAae7xv/lV3QfozSolFODvXlBjNaCDYb1r8Rag01eM83b1Wv/R23enFO18p/UW9k
            +/wk+kOqUfEd+0NBkXdRQiCrvwxHs51IqMFH5aAhM9lHmaHYmdPjETdeYPeKlA22
            CYLCkApEazGNPZGt6Kv7XeBwiI+6DScbHxr+j9S/j9+7BuMs6MItE4J9EtavkFtr
            aw/ijGsifCKJWpkD28uZ3h83qi8diUwRde0zrX4SJAUi/T2UXPywep1z6bQ70Vaf
            YrciSOndw5zWiTYMUDl6q7iZR6vloiZMoGf7psLx1y0Vg4Sq8DPldXAMpaNPh8+Z
            UhqD94pBGg+iVaYII8MeWHaqtHc0ewQAKAq121rulOuZgaRbl/5LuQp8rQARAQAB
            tD1QaG9zaCBEZWJpYW4gUGFja2FnZXMgKEFyY2hpdmUgU2lnbmluZyBLZXkpIDxk
            ZWJzQHBob3NoLm1vYmk+iQJUBBMBCgA+AhsDBQsJCAcDBRUKCQgLBRYCAwEAAh4B
            AheAFiEEeHJPmfZ/wlY1lpbHLf0ViOUfQ7IFAmXoV34FCQlmPBgACgkQLf0ViOUf
            Q7JWNxAApMQeEKSto6LGZkdqoKXCZgaXg//2UeAnkhK9+Z1hZ2Do7RYhoOW994yi
            FqtZ92WVMqzbK0EqfEnFX8yVzM1cXo3PgouCDCgTy060YmH0OV2XxThr8fJ4uZfW
            vib9HE+W4o/dgoMSy3BlPtpB1y/gevgJGoHAtQbV6Ex4bRL89i8pOQJYPYRx5Xj0
            4SADUWWjOnY9AZbykUlMuRFSOMBWITn8yqUCYPpw8bGbtFignfvK1iRcW5LIkrtY
            XsOlQCK5+ttNAMUkCeI93LGYhSZUqbpt87tdkbCP5qfV7o7Vkv8iObKw8fxKh2o1
            oijY8S6ZqEl/CZjDtKcdvsQrEvY3Z1KX0xUNn01PFrHGzRiTn7eieXF4O3PCM2zJ
            1TGva0gliKUgdN4y8W6Ul1H74T3rhZWpNO10rotfnvyX6AP/bLlkdMdSpL85mcqt
            PfSROQGcKOU6WmF1G2MvwzBY6sjP3IN95qqnaBKa1IJGBPFt5IsY8eoqdNuNkeRT
            W3OFcBQas+1RQdDzOZ7svJIX9fNBubebtnB20mRYIwESkhQMO2VpjyrBPzUP+bum
            kg/7Lx/Gr+OdH2SzNfeTr+28foyKExf2wdhbICErm+eRq1Bh4dFe6ljN/YBUVdEq
            MHjCZ4GQaiw5Uq+5sQTUWYkFeb/j3NeRadmSTshinPgTISGNYBo=
            =lIij
            -----END PGP PUBLIC KEY BLOCK-----
          EOF
          # for phrog tests
          sudo apt update
          sudo apt-get install -y xvfb wf-recorder phoc
      - name: build phosh (temporary until libphosh is packaged upstream)
        run: |
          set -uexo pipefail
          cd phosh
          sudo apt-get build-dep -t trixie-nightly -y ./
          meson setup --prefix=/usr -Dbindings-lib=true _build .
          sudo meson install -C _build
      - name: Build
        run: |
          set -uexo pipefail
          cargo build --all-targets --verbose
      - name: Test
        run: |
          set -uexo pipefail

          export G_MESSAGES_DEBUG=all

          # Install phrog schemas so the tests can run.
          mkdir -p $HOME/.local/share/glib-2.0/schemas/
          cp resources/mobi.phosh.phrog.gschema.xml $HOME/.local/share/glib-2.0/schemas/
          glib-compile-schemas $HOME/.local/share/glib-2.0/schemas/
          # start phoc + wf-recorder
          dbus-run-session xvfb-run -a -s -noreset phoc -S -E "wf-recorder -f tests.mp4" &
          export WAYLAND_DISPLAY=wayland-0
          trap "pkill phoc; sleep 1" EXIT
          # wait some moments for compositor startup. would be better to properly parse out the
          # display name and readiness state from phoc stdout.
          sleep 3
          # run tests
          cargo test --verbose -- --test-threads=1 --nocapture
      - uses: actions/upload-artifact@v4
        with:
          name: x86-64-debug
          path: target/debug/phrog
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: tests-recording
          path: tests.mp4
